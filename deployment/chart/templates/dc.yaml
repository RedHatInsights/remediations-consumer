---
apiVersion: v1
kind: DeploymentConfig
metadata:
  labels:
    app: remediations
  name: remediations-consumer
spec:
  replicas: {{ .Values.replicas | default 1 }}
  selector:
    app: remediations
    deploymentconfig: remediations-consumer
  strategy:
    type: Recreate
    activeDeadlineSeconds: 21600
  template:
    metadata:
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/port: "9006"
        prometheus.io/scrape: "true"
      labels:
        app: remediations
        deploymentconfig: remediations-consumer
    spec:
      containers:
      - image: {{ .Values.imageRegistry }}/{{ .Values.imageNamespace }}/remediations-consumer:{{ .Values.istag | default "latest" }}
        imagePullPolicy: Always
        name: remediations-consumer
        ports:
        - containerPort: 9006
          protocol: TCP
        livenessProbe:
          httpGet:
            path: /metrics
            port: 9006
          initialDelaySeconds: 10
          periodSeconds: 10
          failureThreshold: 2
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              key: hostname
              name: remediation-db
        - name: DB_DATABASE
          value: remediations
        - name: DB_USERNAME
          valueFrom:
            secretKeyRef:
              key: username
              name: remediation-db
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              key: password
              name: remediation-db
{{ if .Values.db.ca }}
        - name: DB_CA
          value: /opt/certs/rds-cacert
{{ end }}

        - name: LOG_LEVEL
          value: {{ .Values.logLevel }}
        - name: KAFKA_HOST
          value: {{ .Values.kafkaHost }}

        resources:
          requests:
            cpu: 100m
            memory: 256Mi
          limits:
            cpu: 200m
            memory: 512Mi

{{ if .Values.db.ca }}
        volumeMounts:
        - name: rds-cacert
          mountPath: /opt/certs/
          readOnly: true
      volumes:
      - name: rds-cacert
        secret:
          secretName: {{ .Values.db.ca }}
{{ end }}

      dnsPolicy: ClusterFirst
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
  triggers:
  - type: ConfigChange
  - type: ImageChange
    imageChangeParams:
      automatic: true
      containerNames:
      - remediations-consumer
      from:
        kind: ImageStreamTag
        name: remediations-consumer:{{ .Values.istag | default "latest" }}
        namespace: {{ .Values.imageNamespace }}
