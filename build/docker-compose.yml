version: '3.4'

services:
  remediations-consumer:
    build:
      context: ../
      dockerfile: build/Dockerfile
      target: dist
    command: sh -c "echo 'Waiting 10s for dependencies to start' && sleep 10 && npm run db:ims && node dist/src/app.js"
    depends_on:
      - db
      - kafka
    ports:
      - "9006:9006"
    environment:
      NODE_ENV: production
      NODE_OPTIONS: --enable-source-maps
      LOG_LEVEL: trace
      DB_HOST: db
      KAFKA_BROKERS: kafka:9092
      KAFKA_AUTOCOMMIT: true
      INVENTORY_TOPIC_ENABLED: "true"
    restart: "no"

  zookeeper:
    image: confluentinc/cp-zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_SERVER_ID=1
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "platform.inventory.events:3:1"
      KAFKA_ADVERTISED_HOST_NAME: 172.17.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181

  db:
    image: quay.io/cloudservices/postgresql-rds:14
    ports:
      - 5432:5432
    environment:
      - POSTGRESQL_USER=postgres_user
      - POSTGRESQL_PASSWORD=remediations
      - POSTGRESQL_DATABASE=remediations
    healthcheck:
      test: "psql -c 'SELECT datname FROM pg_database;'"
      start_period: 3s
      interval: 10s
      retries: 6

